//- Use the presentation layout so we can keep this clean
extends layouts/presentation

block append config
  -
    config.theme = 'lengstorf';
    config.title = 'Why does Gatsby use GraphQL?';
    config.description = '';

    config.author = {
      name: 'Jason Lengstorf',
      email: 'jason@gatsbyjs.com',
      link: 'https://lengstorf.com/',
      twitter: 'jlengstorf',
      github: 'jlengstorf',
    };
    
    config.slides = {
      link: 'https://git.io/why-gatsby-uses-graphql',
    };

    config.conference = {
      hashtag: '',
      twitter: '',
    };
  -

//- Add your slides here. See templates/includes/_mixins.pug for information 
//- on how `+slide` works.
block slides
  +slide
    h1(style="font-size: 90px; margin-bottom: 0")= config.title
    
    p by 
      a(href= config.author.link)= config.author.name
      br
      small
        a(href= `https://twitter.com/${config.author.twitter}`)= `@${config.author.twitter}`
        | &nbsp; · &nbsp;
        a(href= `mailto:${config.author.email}`)= config.author.email
    
    p
      small Slides: #[a(href= config.slides.link)= config.slides.link.replace('https://', '')]

  +slide
    h1(style="font-size: 100px") 👋 Hi! I’m Jason.
    blockquote.photo-quote
      .photo
        img(
          src="./images/jason-lengstorf.jpg"
          alt="Jason Lengstorf"
        )
      .quote
        ul(style="list-style: none;")
          li Human Duct Tape at Gatsby
          li Formerly: IBM
          li Portland, OR
  
  //- Main content
  +slide
    h2 Even “simple” data has complex relationships

  +slide
    img.no-border(
      src="./images/why-gatsby-uses-graphql/blog-post.png"
      alt="A blog post on lengstorf.com."
    )

  +slide
    img.no-border(
      src="./images/why-gatsby-uses-graphql/blog-post-1.png"
      alt="A blog post on lengstorf.com with the image labeled."
    )

  +slide
    img.no-border(
      src="./images/why-gatsby-uses-graphql/blog-post-2.png"
      alt="A blog post on lengstorf.com with the image and category labeled."
    )

  +slide
    img.no-border(
      src="./images/why-gatsby-uses-graphql/blog-post-3.png"
      alt="A blog post on lengstorf.com with the image, category, and tags labeled."
    )

  +slide
    img.no-border(
      src="./images/why-gatsby-uses-graphql/data-complexity.png"
      alt="Map of data relationships for an average blog."
      style="max-height: 600px"
    )

  +slide
    h4.no-margin Many CMS options use relational databases to manage data
    img.no-margin.no-border(
      src="./images/why-gatsby-uses-graphql/mock-db.png"
      alt="Mock relational DB tables for normalized data."
      style="max-height: 600px"
    )
  
  +slide
    h4.no-margin Multiple requests required to load data
    img.no-margin.no-border(
      src="./images/why-gatsby-uses-graphql/load-post-data.png"
      alt="Pseudo-code to load post data, author data, and comment data."
    )
    small.no-margin (plus categories, tags, related posts, etc.)

  +slide
    h4.no-margin GraphQL tames this complexity
    img.no-margin.no-border(
      src="./images/why-gatsby-uses-graphql/graphql.png"
      alt="Loading all post data with related posts in a single query."
      style="max-height: 600px"
    )
  
  +slide
    h2 Gatsby takes this a step further
  
  +slide
    h4 In Gatsby, you can use GraphQL to query:
    ul
      li.fragment Site metadata and page information
      li.fragment The file system (#[code gatsby-source-filesystem])
      li.fragment Third party data (via source plugins)
      li.fragment Relationships between data from multiple sources

  +slide
    img.no-border(src="./images/beyond-static/cm1.png" alt="The Content Mesh with Gatsby.")

  +slide
    img.no-border(src="./images/beyond-static/cm2.png" alt="The Content Mesh with Gatsby.")

  +slide
    img.no-border(src="./images/beyond-static/cm3.png" alt="The Content Mesh with Gatsby.")

  +slide
    img.no-border(src="./images/beyond-static/cm4.png" alt="The Content Mesh with Gatsby.")

  +slide
    h1 🛠 Demo 🛠
    p
      a(href="https://github.com/jlengstorf/why-gatsby-uses-graphql").
        github.com/jlengstorf/why-gatsby-uses-graphql

  //- Thanks & Resources
  +slide
    h1.no-margin Thanks!
    img(
      src="./images/jason-lengstorf.jpg"
      alt="Jason Lengstorf"
      style="border-radius: 50%; width: 240px; min-width: 0; margin-bottom: 0;"
    )
    p(style="margin-top: 0.25rem;")= config.author.name
      br
      small
        | Follow me on Twitter: 
        a(href= `https://twitter.com/${config.author.twitter}`)= `@${config.author.twitter}`

  +slide.u--align-left.resourcetext
    h4 Resources
    ol
      li
        a(href="https://gatsbyjs.org").
          Gatsby
      li
        a(href="https://github.com/jlengstorf/why-gatsby-uses-graphql").
          Demo code

block styles
  link(
    rel="stylesheet"
    href="//maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css"
  )
  script.
    (function(d) {
      var config = {
        kitId: 'fnr1orp',
        scriptTimeout: 3000,
        async: true
      },
      h=d.documentElement,t=setTimeout(function(){h.className=h.className.replace(/\bwf-loading\b/g,"")+" wf-inactive";},config.scriptTimeout),tk=d.createElement("script"),f=false,s=d.getElementsByTagName("script")[0],a;h.className+=" wf-loading";tk.src='https://use.typekit.net/'+config.kitId+'.js';tk.async=true;tk.onload=tk.onreadystatechange=function(){a=this.readyState;if(f||a&&a!="complete"&&a!="loaded")return;f=true;clearTimeout(t);try{Typekit.load(config)}catch(e){}};s.parentNode.insertBefore(tk,s)
    })(document);

block scripts
  script(async src="https://platform.twitter.com/widgets.js" charset="utf-8")

block extras
  -
    const relatedAccounts = [config.author.twitter];
    
    if (config.conference.twitter) {
      relatedAccounts.push(config.conference.twitter);
    }

    // See https://dev.twitter.com/web/tweet-button/web-intent for parameters.
    const tweetObj = {
      text: `${config.title} by @${config.author.twitter}`,
      hashtags: config.conference.hashtag || '',
      related: relatedAccounts.join(','),
      url: config.slides.link,
    };

    // 
    const e = encodeURIComponent;
    const args = Object.keys(tweetObj).map(key => `${key}=${e(tweetObj[key])}`);
    const tweetUrl = `https://twitter.com/intent/tweet?${args.join('&')}`;
  -
  footer.v2
    ul.inline
      li
        a(
          href= config.slides.link
          title="View the slides online."
        )= config.slides.link.replace('https://', '')
      li
        a(
          href="https://twitter.com/"+config.author.twitter
          title="Find Jason on Twitter"
        ).
          @#{config.author.twitter}
      li
        a.no-icon(
          href=tweetUrl
        ) #{config.conference.hashtag ? `#${config.conference.hashtag}` : ''}
        
