//- Use the presentation layout so we can keep this clean
extends layouts/presentation

block append config
  -
    config.theme = 'gatsby';
    config.title = 'What’s new in Gatsby?';
    config.description = 'Themes, schema customization, and more!';

    config.author = {
      name: 'Jason Lengstorf',
      email: 'jason@gatsbyjs.com',
      link: 'https://lengstorf.com/',
      twitter: 'jlengstorf',
      github: 'jlengstorf',
    };
    
    config.slides = {
      link: 'https://git.io/new-in-gatsby',
    };

    config.conference = {
      hashtag: '',
      twitter: '',
    };
  -

//- Add your slides here. See templates/includes/_mixins.pug for information 
//- on how `+slide` works.
block slides
  +slide.dark
    h1(style="font-size: 70px; margin-bottom: 0")= config.title
    h3(style="font-size: 38px; margin-bottom: 0")= config.description
    
    p by 
      a(href= config.author.link)= config.author.name
      br
      small
        a(href= `https://twitter.com/${config.author.twitter}`)= `@${config.author.twitter}`
        | &nbsp; · &nbsp;
        a(href= `mailto:${config.author.email}`)= config.author.email
    
    p
      small Slides: #[a(href= config.slides.link)= config.slides.link.replace('https://', '')]

  +slide
    h1(style="font-size: 100px") 👋 #[em.brand Hi!] I’m Jason.
    blockquote.photo-quote
      .photo
        img(
          src="./images/jason-lengstorf.jpg"
          alt="Jason Lengstorf"
        )
      .quote
        ul(style="margin: 0; font-size: 80%; list-style: none")
          li.fragment 🙃 Human Duct Tape @ Gatsby 💜
          li.fragment 🏗 Formerly: front-end architect @ IBM 💙
          li.fragment 🎸 Failed musician 🚫
          li.fragment 🍸 Amateur bartender 🥃
          li.fragment 🚲 Living in Portland, OR ☕️
  
  //- Main content
  +slide
    h2 Lots of #[em exciting] things are happening.
  
  +slide.dark
    h1 Themes

  +slide
    h3 Gatsby sites are made up of config, data, assets, plugins, components, and more.
  
  +slide
    img.no-border(
      src="../images/gatsby/gatsby-site.png"
    )
    small.no-margin Image credit: Kyle Gill

  +slide
    h3 ...and this is pretty badass.
    img(
      src="../images/gatsby/voltron01.gif"
      alt="Voltron lion bots."
    )
  
  +slide
    h3 Gatsby themes allow us to combine all this into a single, composable package.

  +slide
    img.no-border(
      src="../images/gatsby/gatsby-themes-site.png"
    )
    small.no-margin Image credit: Kyle Gill

  +slide
    h3 ...and this is #[span.underlined extremely] badass.
    img(
      src="../images/gatsby/voltron02.gif"
      alt="Voltron lion bots."
    )

  +slide
    h3 Gatsby themes are #[em powerful]
    ul
      li.fragment Themes are fully functioning websites on their own
      li.fragment Multiple themes can be installed at once
      li.fragment Themes are composable

  +slide.dark
    h1 Schema Customization

  +slide
    h2 We can now create #[em custom] types and resolvers for your Gatsby sites.

  +slide
    h3 Custom types (#[code gatsby-node.js])
    pre
      code.
        exports.sourceNodes = ({ actions }) => {
          actions.createTypes(`
            type MyCustomNode implements Node {
              name: String!
            }
          `);
        };

  +slide
    h3 Custom resolvers
    pre
      code.
        exports.createResolvers = ({ createResolvers }) => {
          createResolvers({
            Query: {
              getGoodStuff: {
                resolve: () => {
                  return ['whiskey', 'puppies', 'dessert']
                }
              }
            }
          })
        };

  +slide
    h3 This solves some old gotchas
    ul
      li.fragment Starting a site with no content doesn’t error output
      li.fragment Field types are guaranteed predictable

  +slide
    h3 And opens new possibilities
    ul
      li.fragment Generic data types
      li.fragment Multi-source data types
      li.fragment So many things the community hasn’t shown us yet

  +slide.dark
    h1 Asset Prefixes

  +slide
    h2 We can serve assets from a #[span.underlined different CDN].

  +slide
    h3 1. Update #[code gatsby-config.js]
    pre
      code.
        module.exports = {
          assetPrefix: `https://cdn.example.com`,
        }

  +slide
    h3 2. Add the flag during builds
    pre
      code.
        gatsby build --prefix-paths

  +slide
    h3 3. There is no step 3
    pre
      code.
        &lt;script src="https://cdn.example.com/common-123.js">&lt;/script>

  +slide
    h3 This unblocks a lot of large team’s workflows.

  //- Thanks & Resources
  +slide
    h1.no-margin Thanks!
    img(
      src="./images/jason-lengstorf.jpg"
      alt="Jason Lengstorf"
      style="border-radius: 50%; width: 240px; min-width: 0; margin-bottom: 0;"
    )
    p(style="margin-top: 0.25rem;")= config.author.name
      br
      small
        | Follow me on Twitter: 
        a(href= `https://twitter.com/${config.author.twitter}`)= `@${config.author.twitter}`

//- 
  +slide.u--align-left.resourcetext
    h4 Resources
    ol
      li
        a(href="https://gatsbyjs.org").
          Gatsby

block styles
  link(
    rel="stylesheet"
    href="//maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css"
  )
  script.
    (function(d) {
      var config = {
        kitId: 'fnr1orp',
        scriptTimeout: 3000,
        async: true
      },
      h=d.documentElement,t=setTimeout(function(){h.className=h.className.replace(/\bwf-loading\b/g,"")+" wf-inactive";},config.scriptTimeout),tk=d.createElement("script"),f=false,s=d.getElementsByTagName("script")[0],a;h.className+=" wf-loading";tk.src='https://use.typekit.net/'+config.kitId+'.js';tk.async=true;tk.onload=tk.onreadystatechange=function(){a=this.readyState;if(f||a&&a!="complete"&&a!="loaded")return;f=true;clearTimeout(t);try{Typekit.load(config)}catch(e){}};s.parentNode.insertBefore(tk,s)
    })(document);

block scripts
  script(async src="https://platform.twitter.com/widgets.js" charset="utf-8")

block extras
  -
    const relatedAccounts = [config.author.twitter];
    
    if (config.conference.twitter) {
      relatedAccounts.push(config.conference.twitter);
    }

    // See https://dev.twitter.com/web/tweet-button/web-intent for parameters.
    const tweetObj = {
      text: `${config.title} by @${config.author.twitter}`,
      hashtags: config.conference.hashtag || '',
      related: relatedAccounts.join(','),
      url: config.slides.link,
    };

    // 
    const e = encodeURIComponent;
    const args = Object.keys(tweetObj).map(key => `${key}=${e(tweetObj[key])}`);
    const tweetUrl = `https://twitter.com/intent/tweet?${args.join('&')}`;
  -
  footer.v2
    ul.inline
      li
        a(
          href= config.slides.link
          title="View the slides online."
        )= config.slides.link.replace('https://', '')
      li
        a(
          href="https://twitter.com/"+config.author.twitter
          title="Find Jason on Twitter"
        ).
          @#{config.author.twitter}
      li
        a.no-icon(
          href=tweetUrl
        ) #{config.conference.hashtag ? `#${config.conference.hashtag}` : ''}
